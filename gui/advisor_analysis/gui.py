
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import os

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Scrollbar, RIGHT, Y
import sys
sys.path.append(os.getcwd() + r'\serverside')
from chatgpt_call import Analysis
import textwrap

class AdvisorAnalysis:
    def __init__(self, back):
        self.OUTPUT_PATH = Path(__file__).parent
        self.ASSETS_PATH = self.OUTPUT_PATH / str(os.path.dirname(os.path.abspath(__file__)) + r"\assets\frame0")
        self.back = back

    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)

    def run(self):
        self.window = Tk()
        self.window.title("")

        self.window.geometry("900x600")
        self.window.configure(bg = "#FFFFFF")


        self.canvas = Canvas(
            self.window,
            bg = "#FFFFFF",
            height = 600,
            width = 900,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_rectangle(
            14.0,
            78.0,
            885.0,
            593.0,
            fill="#FFFFFF",
            outline="")

        self.entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_bg_1 = self.canvas.create_image(
            451.0,
            335.0,
            image=self.entry_image_1
        )
        self.scrollbar = Scrollbar(self.window)
        self.scrollbar.pack(
            side=RIGHT, 
            fill=Y
        )
        self.entry_1 = Text(
            bd=0,
            bg="#D9D9D9",
            fg="#000716",
            highlightthickness=0,
            yscrollcommand=self.scrollbar.set
        )

        with open(os.getcwd() + r'\serverside\analysis.txt', 'r') as file:
            lines = file.read().splitlines()
            wrapped_lines = [textwrap.fill(line, width=100) for line in lines]
            wrapped_text = '\n'.join(wrapped_lines)
            self.entry_1.insert('1.0', wrapped_text)

        self.entry_1.configure(state="disabled")

        self.entry_1.place(
            x=34.0,
            y=85.0,
            width=834.0,
            height=498.0
        )
        self.scrollbar.config(command=self.entry_1.yview)

        self.canvas.create_text(
            43.0,
            48.0,
            anchor="nw",
            text="Assistant analysis",
            fill="#000000",
            font=("Poppins SemiBold", 28 * -1, 'bold')
        )

        self.canvas.create_rectangle(
            0.0,
            0.0,
            900.0,
            29.0,
            fill="#B40000",
            outline="")

        self.canvas.create_text(
            263.0,
            1.0,
            anchor="nw",
            text="LINGUAWEALTH ADVISOR PAGE",
            fill="#FFFFFF",
            font=("Poppins Bold", 24 * -1, 'bold')
        )

        self.button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_1 = Button(
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.back,
            relief="flat"
        )
        self.button_1.place(
            x=0.0,
            y=1.0,
            width=125.0,
            height=28.0
        )
        self.window.resizable(False, False)
        self.window.mainloop()
        
    def terminate(self):
        self.window.destroy()
